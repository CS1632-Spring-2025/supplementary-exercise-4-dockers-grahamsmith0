package edu.pitt.cs;

import static org.hamcrest.MatcherAssert.assertThat;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class D3Test {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless");
        driver = new ChromeDriver(options);
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void tEST1LINKS() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        {
            List<WebElement> elements = driver.findElements(By.xpath("//a[contains(@href, \'/\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//a[contains(@href, \'rent-a-cat\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//a[contains(@href, \'feed-a-cat\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//a[contains(@href, \'greet-a-cat\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//nav//a[contains(@href, \'reset\')]"));
            assert (elements.size() > 0);
        }
    }

    /*
    @Test
    public void dEFECT1FUNGREETACAT() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=true\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Greet-A-Cat")).click();
        assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!"));
    }
    
    @Test
    public void dEFECT2FUNGREETACATWITHNAME() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=true\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
        assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Jennyanydots is not here."));
    }
    
    @Test
    public void dEFECT3FUNFEED() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=true\";document.cookie=\"3=true\";");
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        driver.findElement(By.xpath("//input")).sendKeys("-1");
        driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(1));
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(., \'Cat fight!\')]")));
        }
    }
    */

    @Test
    public void tEST2RESET() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=true\";document.cookie=\"2=true\";document.cookie=\"3=true\";");
        driver.findElement(By.linkText("Reset")).click();
        assertThat(driver.findElement(By.id("cat-id1")).getText(), is("ID 1. Jennyanydots"));
        assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
    }

    @Test
    public void tEST3CATALOG() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Catalog")).click();
        vars.put("imgs", driver.findElements(By.xpath("//img")).size());
        assertEquals(vars.get("imgs").toString(), "3");
        {
            List<WebElement> elements = driver
                    .findElements(By.xpath("//li[1]/img[contains(@src, \'images/cat1.jpg\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver
                    .findElements(By.xpath("//li[2]/img[contains(@src, \'/images/cat2.jpg\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver
                    .findElements(By.xpath("//li[3]/img[contains(@src, \'/images/cat3.jpg\')]"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void tEST4LISTING() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Catalog")).click();
        vars.put("cats", driver.findElements(By.xpath("//li[contains(@class,\'list-group-item\')]")).size());
        assertEquals(vars.get("cats").toString(), "3");
        assertThat(driver.findElement(By.xpath("//div/ul/li[3]")).getText(), is("ID 3. Mistoffelees"));
    }

    @Test
    public void tEST4LISTINGRENTED() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=true\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Catalog")).click();
        vars.put("cats", driver.findElements(By.xpath("//li[contains(@class,\'list-group-item\')]")).size());
        assertEquals(vars.get("cats").toString(), "3");
        assertThat(driver.findElement(By.id("cat-id1")).getText(), is("Rented out"));
    }

    @Test
    public void tEST5RENTACAT() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Rent\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Return\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//input"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void tEST6RENT() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("rentID")).sendKeys("1");
        driver.findElement(By.xpath("//button[contains(.,\'Rent\')]")).click();
        assertThat(driver.findElement(By.xpath("//div/ul/li[1]")).getText(), is("Rented out"));
        assertThat(driver.findElement(By.xpath("//div/ul/li[2]")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.xpath("//div/ul/li[3]")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.id("rentResult")).getText(), is("Success!"));
    }

    @Test
    public void tEST6RENTRENTED() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=true\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("rentID")).sendKeys("1");
        driver.findElement(By.xpath("//button[contains(.,\'Rent\')]")).click();
        assertThat(driver.findElement(By.id("cat-id1")).getText(), is("Rented out"));
        assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.id("rentResult")).getText(), is("Failure!"));
    }

    @Test
    public void tEST7RETURN() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=true\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("returnID")).sendKeys("2");
        driver.findElement(By.xpath("//button[contains(.,\'Return\')]")).click();
        assertThat(driver.findElement(By.id("cat-id1")).getText(), is("ID 1. Jennyanydots"));
        assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.id("returnResult")).getText(), is("Success!"));
    }

    @Test
    public void tEST7RETURNRETURNED() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("returnID")).sendKeys("2");
        driver.findElement(By.xpath("//button[contains(.,\'Return\')]")).click();
        assertThat(driver.findElement(By.id("cat-id1")).getText(), is("ID 1. Jennyanydots"));
        assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.id("returnResult")).getText(), is("Failure!"));
    }

    @Test
    public void tEST8FEEDACAT() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Feed\')]"));
            assert (elements.size() > 0);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//input"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void tEST9FEED() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        driver.findElement(By.xpath("//input")).sendKeys("6");
        driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(1));
            wait.until(
                    ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(., \'Nom, nom, nom.\')]")));
        }
    }

    @Test
    public void tEST9FEEDNEGATIVE() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        driver.findElement(By.xpath("//input")).sendKeys("-1");
        driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(1));
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(., \'Cat fight!\')]")));
        }
    }

    @Test
    public void tEST9FEEDODD() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        driver.findElement(By.xpath("//input")).sendKeys("5");
        driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(1));
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[contains(., \'Cat fight!\')]")));
        }
    }

    @Test
    public void tEST10GREETACAT() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.findElement(By.linkText("Greet-A-Cat")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//h4[contains(.,\'Meow!Meow!Meow!\')]"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void tEST11GREETACATWITHNAME() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
        assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow! from Jennyanydots."));
    }

    @Test
    public void tEST11GREETACATWITHNAMEINVALID() {
        driver.get("http://localhost:8080//");
        js.executeScript("document.cookie=\"1=false\";document.cookie=\"2=false\";document.cookie=\"3=false\";");
        driver.get("http://localhost:8080/greet-a-cat/ABC");
        assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("ABC is not here."));
    }
}